name: test
on:
  workflow_dispatch: #Esto nos permite ejecutar el workflow desde el menu actions de github.
  push:              #Ejecuta el workflow cuando se hace un push en la branch main.
    branches:
      - main  
  pull_request:      #Ejecuta el workflow cuando se hace un pull request de la branch main.
    branches:
      - main         

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Copiar codigo #Procura una copia del codigo que se encuentra en el repositorio sobre la cual trabajar en el workflow.
      uses: actions/checkout@v2
    
    - name: Preparar JDK #Prepara el Java Development Kit a utilizar para las pruebas.
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Compilar codigo #Compila el codigo usando el comando javac.
      run: javac -cp .:lib/junit-jupiter-api_5.9.2.jar:lib/junit-jupiter-engine_5.9.2.jar:lib/org.apiguardian.api_1.1.2.jar:lib/org.opentest4j_1.2.0.jar mercadotech/src/productos/ProductoTest.java mercadotech/src/productos/Producto.java
    
    - name: Ejecutar las pruebas #Ejecuta las pruebas unitarias de la clase JavaTest.
      run: java -jar lib/junit-platform-console-standalone-1.9.2.jar --class-path=lib/junit-jupiter-api_5.9.2.jar:lib/junit-jupiter-engine_5.9.2.jar:lib/org.apiguardian.api_1.1.2.jar:lib/org.opentest4j_1.2.0.jar --scan-classpath --select-class=productos.ProductoTest
      
    - name: Mensaje de Listo 
      run: echo "Listas las pruebas maestro!!"
